"""empty message

Revision ID: 133e45a569a0
Revises: da2578da0dff
Create Date: 2024-07-24 01:01:28.886886

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '133e45a569a0'
down_revision = 'da2578da0dff'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_data',
    sa.Column('BookDataID', sa.Integer(), nullable=False),
    sa.Column('Authors', sa.String(length=255), nullable=False),
    sa.Column('Title', sa.String(length=255), nullable=False),
    sa.Column('Year', sa.Integer(), nullable=False),
    sa.Column('Subjects', sa.String(length=255), nullable=False),
    sa.Column('Bookshelves', sa.String(length=255), nullable=False),
    sa.Column('Copyright', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('BookDataID')
    )
    op.create_table('users',
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('Username', sa.String(length=50), nullable=False),
    sa.Column('Email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('UserID')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_Username'), ['Username'], unique=False)

    op.create_table('line_fetched',
    sa.Column('LineFetchedID', sa.Integer(), nullable=False),
    sa.Column('BookDataID', sa.Integer(), nullable=False),
    sa.Column('Excerpt', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['BookDataID'], ['book_data.BookDataID'], ),
    sa.PrimaryKeyConstraint('LineFetchedID')
    )
    op.create_table('text_created',
    sa.Column('TextCreatedID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('MetaDataUsed', sa.String(length=255), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['UserID'], ['users.UserID'], ),
    sa.PrimaryKeyConstraint('TextCreatedID')
    )
    op.create_table('line_stamped',
    sa.Column('LineStampedID', sa.Integer(), nullable=False),
    sa.Column('TextCreatedID', sa.Integer(), nullable=False),
    sa.Column('LineFetchedID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['LineFetchedID'], ['line_fetched.LineFetchedID'], ),
    sa.ForeignKeyConstraint(['TextCreatedID'], ['text_created.TextCreatedID'], ),
    sa.PrimaryKeyConstraint('LineStampedID')
    )
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key')
    )
    op.drop_table('line_stamped')
    op.drop_table('text_created')
    op.drop_table('line_fetched')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_Username'))

    op.drop_table('users')
    op.drop_table('book_data')
    # ### end Alembic commands ###
